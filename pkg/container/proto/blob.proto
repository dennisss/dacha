syntax = "proto3";

package cluster;

import "google/protobuf/empty.proto";
import "pkg/builder/proto/bundle.proto";

service BundleBlobStore {
    // Enumerates all blobs persisted to this server.
    rpc List (google.protobuf.Empty) returns (BlobListResponse);
    
    // Adds a new blob to this server.
    //
    // Errors:
    // - ALREADY_EXISTS: If a blob with the same id is already present on this server.
    rpc Upload (stream BlobData) returns (google.protobuf.Empty);

    // Retrieves the contents of an uploaded blob from the server.
    // TODO: Support range queries.
    rpc Download (BlobDownloadRequest) returns (stream BlobData);

    // Errors:
    // - NOT_FOUND: The requested blob isn't present on this server.
    // - FAILED_PRECONDITION: The blob can't be deleted as it is currently in use.
    rpc Delete (BlobDeleteRequest) returns (google.protobuf.Empty);
}

message BlobListResponse {
    repeated builder.BundleBlobSpec blob = 1;
}

message BlobData {
    builder.BundleBlobSpec spec = 1;
    bytes data = 2;
}

message BlobDownloadRequest {
    string blob_id = 1;
}

message BlobDeleteRequest {
    string blob_id = 1;
}
