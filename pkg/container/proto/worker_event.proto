syntax = "proto3";

package cluster;

import "pkg/container/proto/config.proto";
import "google/rpc/status.proto";

message WorkerEvent {
    string worker_name = 1;

    // Microseconds since epoch. It is expected that the this is recorded using a monotonic clock (at least monotonic across the entire node).
    uint64 timestamp = 2;

    uint64 worker_revision = 3;

    string container_id = 4;

    // NOTE: Only present when events are aggregated outside of the originating node.
    uint64 node_id = 9;

    // The worker can't currently be started as we are 
    message Pending {}

    // The worker just started running using the given container_id
    message Started {}

    // While attempting to start the worker, a failure occured.
    message StartFailure {
        google.rpc.Status status = 1;
    }

    message Stopping {
        bool force = 1;
    }

    message Stopped {
        ContainerStatus status = 1;
    }

    oneof type {
        StartFailure start_failure = 5;
        Started started = 6;
        Stopping stopping = 7;
        Stopped stopped = 8;
    }
}
