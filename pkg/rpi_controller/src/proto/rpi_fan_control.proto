syntax = "proto3";

package rpi.controller;

import "third_party/google/src/proto/empty.proto";

message FanControlState {
    // Current speed of the fan from 0 to 1.
    // Only writeable if auto == false.
    float current_speed = 1;

    // Current temperature in degrees celsius reported by the CPU.
    // Read-only
    float current_temp = 2;

    // If true, the speed of the fan is automatically controlled 
    // Read-write
    bool auto = 3;

    // When auto == true, the curve used to
    FanCurve fan_curve = 4;
}

message FanCurve {
    // TODO: Also add sampling/filtering settings.

    // List of control points which define the relationship between the input temperature and output
    // fan speed.
    // 
    // - Should be sorted in ascending order of 'temperature'.
    // - Intermediate values are linearly interpolated.
    repeated FanCurvePoint points = 1;
}

message FanCurvePoint {
    float temp = 1;
    float speed = 2;
}

service FanControl {
    rpc Read (google.protobuf.Empty) returns (FanControlState);

    rpc Write (FanControlState) returns (google.protobuf.Empty);

    rpc Identify (google.protobuf.Empty) returns (google.protobuf.Empty);
}